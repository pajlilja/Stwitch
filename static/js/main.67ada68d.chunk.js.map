{"version":3,"sources":["components/Graph/graph.js","firebase/firebase.js","api/APIFunctions.js","containers/Startpage/StartpageContainer.js","components/Topbar/topbar.js","components/Sidebar/Sidebar.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["svgRadius","svgColor","Graph","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","selectedGame","svg","d3","refs","anchor","append","_this$props","inputGameData","width","height","transform","maxSteamPlayers","margin","maxTwitchViewers","minSteamPlayers","globalStateHandler","attr","xScale","exponent","domain","range","nice","xAxis","yScale","yAxis","console","log","values","selectAll","data","enter","d","i","steamPlayerCount","Math","pow","twitchViewers","on","id","game","box_width","length","parentNode","parseInt","text","remove","style","react_default","a","createElement","ref","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","getTimeStamps","database","once","App","gameData","then","snapshot","games","val","firstKey","keys","maxPlayerCount","minPlayerCount","maxViewerCount","gameKey","_this2","setState","key","top","right","bottom","left","className","graph","gamedata","Topbar","Navbar","bg","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","Divider","Form","inline","FormControl","type","placeholder","Button","variant","players","viewers","channels","steamName","twitchChannels","Topbar_topbar","Switch","Route","exact","path","render","StartpageContainer","Sidebar_Sidebar","withRouter","Boolean","window","location","hostname","match","app","BrowserRouter","basename","containers_App_App","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.67ada68d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\n//import css from 'Graph.css';\nimport './Graph.css'\n\n//import css from 'Graph';   <-- Should work through App.css\n\nvar xPow = 0.5;\nvar yPow = 0.3;\nvar svgRadius = 6;\nvar svgColor = '#009933';\nvar yOff = 40;\nvar xRightOff = 200;\nvar xOff = 20;\nvar selectedGame = \"\";\nvar newClick = false;\n\nclass Graph extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {selectedGame: \"\"};\n      }\n\n\n    componentDidUpdate() {\n\n        const svg = d3.select(this.refs.anchor).append(\"g\"),\n            {inputGameData,\n            width,\n            height,\n            transform,\n            margin,\n            maxSteamPlayers,\n            minSteamPlayers,\n            maxTwitchViewers,\n            globalStateHandler}  = this.props;\n\n        svg.attr(\"transform\", transform);\n\n        var xScale = d3.scalePow().exponent(xPow).domain([0,maxSteamPlayers]).range([0, width-xRightOff]).nice(10); // value -> display\n        var xAxis = d3.axisBottom(xScale);\n\n        var yScale = d3.scalePow().exponent(yPow).domain([0,maxTwitchViewers]).range([height,0]); // value -> display\n        var yAxis = d3.axisLeft(yScale);\n\n        console.log(Object.values(inputGameData));\n\n\n        svg.selectAll('circle').data(Object.values(inputGameData)).enter().append('g').attr('class', function(d,i){\n            console.log(d);\n            return \"circle-g #\" + i;\n        })\n        .append('circle')\n        .attr('r',svgRadius)\n        .attr('fill', \"#009933\")\n        .attr('id', function(d,i){\n            return i;\n        })\n        .attr('cx', function(d){\n            console.log(d.steamPlayerCount);\n            return Math.pow(d.steamPlayerCount/maxSteamPlayers,xPow) * (width-xRightOff) ;\n        })\n        .attr('cy', function(d){\n            return height - Math.pow(d.twitchViewers/maxTwitchViewers,yPow) * height + yOff;\n        }).on(\"mouseover\",handleMouseOver)\n        .on('mouseout',handleMouseOut)\n        .on('click', handleClick);\n\n        // x-axis\n        svg.append(\"g\")\n            .attr(\"class\", \"xaxis\")\n            .attr(\"transform\", \"translate(\" + xOff + \",\" + (height + yOff) + \")\")\n            .call(xAxis)\n            .append(\"text\")\n            .attr(\"class\", \"label\")\n            .attr(\"x\", width)\n            .attr(\"y\", -6)\n            .style(\"text-anchor\", \"end\")\n\n        // y-axis\n        svg.append(\"g\")\n            .attr(\"class\", \"yaxis\")\n            .attr(\"transform\", \"translate(\"+ xOff + \",\" + yOff + \")\")\n            .call(yAxis)\n            .append(\"text\")\n            .attr(\"class\", \"label\")\n            .attr(\"y\", 6)\n            .attr(\"dy\", \".71em\")\n            .style(\"text-anchor\", \"end\")\n\n        function handleMouseOver(d,i){\n            var id = d3.select(this).attr('id');\n            var game = Object.values(inputGameData)[id];\n            var xBoxOffset = 40;\n\n            d3.select(this).attr('fill','orange').attr('r',svgRadius*1.5);\n\n            var box_width = game[\"steamName\"].length*6+60;\n            d3.select(this.parentNode.parentNode).append('rect')\n                .attr('class','text-box')\n                .attr('width',box_width)\n                .attr('height',50)\n                .attr('fill',\"white\")\n                .attr('fill-opacity', 0.8)\n                .attr('y',d3.select(this).attr('cy')-60)\n                .attr('x', parseInt(d3.select(this).attr('cx')) + xBoxOffset);\n\n            d3.select(this.parentNode.parentNode)\n                .append('text')\n                .text(game[\"steamName\"])\n                .attr('class','graph-text')\n                .attr('z-index',-100)\n                .attr('y', (d3.select(this).attr('cy')-45))\n                .attr('x', parseInt(d3.select(this).attr('cx')) + xBoxOffset);\n\n            d3.select(this.parentNode.parentNode)\n                .append('text')\n                .text(\"Steam Players: \" + game[\"steamPlayerCount\"])\n                .attr('class','graph-text')\n                .attr('z-index',-100)\n                .attr('y',d3.select(this).attr('cy')-30)\n                .attr('x', parseInt(d3.select(this).attr('cx')) +xBoxOffset);\n\n            d3.select(this.parentNode.parentNode)\n                .append('text')\n                .text(\"Twitch Viewers: \"+game[\"twitchViewers\"])\n                .attr('class','graph-text')\n                .attr('z-index',-100)\n                .attr('y', (d3.select(this).attr('cy') -15 ))\n                .attr('x', parseInt(d3.select(this).attr('cx')) + xBoxOffset);\n            }\n\n        function handleMouseOut(d,i){\n            d3.select(this).attr('fill',svgColor).attr('r',svgRadius);\n            d3.select(this.parentNode.parentNode).selectAll('.text-box').remove();\n            d3.select(this.parentNode.parentNode).selectAll('.graph-text').remove();\n        }\n\n        function handleClick(d,i){\n            selectedGame = d;\n            newClick = true;\n            console.log(d);\n            globalStateHandler(d);\n            return;\n        }\n   }\n\n\n    render() {\n        return <g ref=\"anchor\" />;\n    }\n}\n\nexport default Graph;\n","import firebase from 'firebase'\n// Initialize Firebase\nvar config = {\n  apiKey: \"AIzaSyBfDVC6zoIBSzTncZSVBOyvEH-oPEIG1Nw\",\n  authDomain: \"stwitch-8a483.firebaseapp.com\",\n  databaseURL: \"https://stwitch-8a483.firebaseio.com\",\n  projectId: \"stwitch-8a483\",\n  storageBucket: \"stwitch-8a483.appspot.com\",\n  messagingSenderId: \"11837305116\"\n};\nfirebase.initializeApp(config);\nexport default firebase;\n","import firebase from '../firebase/firebase';\n\nexport function getGames(){\n  return firebase.database().ref('games').once('value');\n}\n\nexport function getGame(game){\n  var path = 'games/'+game;\n  return firebase.database().ref(path).once('value');\n}\n\nexport function getTimeStamps(){\n  return firebase.database().ref(\"timeStamps\").once('value');\n}\n\nexport default { getGame, getGames, getTimeStamps}\n","import React, { Component } from 'react';\nimport Graph from '../../components/Graph/graph';\n\nimport {getGames, getTimeStamps} from '../../api/APIFunctions';\n\nclass App extends Component {\n  state = {\n    gameData: null,\n  }\n  async componentDidMount() {\n    await getTimeStamps().then(snapshot => {\n      const games = snapshot.val();\n      const firstKey = Object.keys(games)[Object.keys(games).length-1];\n      var maxPlayerCount = 0;\n      var minPlayerCount = 99999999999999;\n      var maxViewerCount = 0;\n\n      for(var gameKey in games[firstKey]){\n        console.log(games[firstKey][gameKey]);\n        if(parseInt(games[firstKey][gameKey][\"steamPlayerCount\"]) > maxPlayerCount){\n          maxPlayerCount = parseInt(games[firstKey][gameKey][\"steamPlayerCount\"]) ;\n        }\n\n        if(parseInt(games[firstKey][gameKey][\"steamPlayerCount\"]) < minPlayerCount){\n          minPlayerCount = parseInt(games[firstKey][gameKey][\"steamPlayerCount\"]) ;\n        }\n\n        if(parseInt(games[firstKey][gameKey][\"twitchViewers\"]) > maxViewerCount){\n          maxViewerCount = parseInt(games[firstKey][gameKey][\"twitchViewers\"]) ;\n        }\n      }\n\n      console.log(maxPlayerCount);\n      console.log(maxViewerCount);\n\n\n      this.setState({\n        gameData: games[firstKey],\n        key: firstKey,\n        minPlayerCount: minPlayerCount,\n        maxPlayerCount: maxPlayerCount,\n        maxViewerCount: maxViewerCount\n      });\n      console.log(maxPlayerCount);\n    });\n  }\n  render() {\n    const margin={top: 20, right: 20, bottom: 30, left: 40}\n\n    return (\n      <div className=\"startpageContainer\">\n        {/*Put siderbar component here*/}\n        {/*Put graph component here*/}\n        {/*\n        <svg width=\"960\" height=\"680\">\n        <Graph\n        data={this.state.data}\n        ></Graph>\n        </svg>\n        */}\n\n        <svg width=\"1300\" height=\"800\">\n        <Graph\n            width = {1300}\n            height = {600}\n            margin = {margin}\n            minSteamPlayers = {this.state.minPlayerCount}\n            maxSteamPlayers = {this.state.maxPlayerCount}\n            maxTwitchViewers = {this.state.maxViewerCount}\n            inputGameData = {this.state.gameData}\n            transform = {\"translate(\" + margin.left + \",\" + margin.top + \")\"}\n            gamedata={this.state.gameData}\n            globalStateHandler={this.props.globalStateHandler}\n          ></Graph>\n        </svg>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport {Navbar, Nav, NavDropdown, Form, FormControl, Button} from 'react-bootstrap';\nimport './topbar.css';\n\nclass Topbar extends Component {\n  render() {\n    return (\n      <div className=\"topbarContainer\">\n        <Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand href=\"#home\">Stwitch</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                <Nav.Link href=\"#home\">Graph this shit</Nav.Link>\n                <Nav.Link href=\"#link\">About Us</Nav.Link>\n                <NavDropdown title=\"Dropdown\" id=\"basic-nav-dropdown\">\n                    <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                    <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                    <NavDropdown.Divider />\n                    <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n                </NavDropdown>\n                </Nav>\n                <Form inline>\n                <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                <Button variant=\"outline-success\">Search</Button>\n                </Form>\n            </Navbar.Collapse>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Topbar;\n","import React, { Component } from 'react';\nimport './Sidebar.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"sidebar\">\n        <div className=\"meta-data\">\n          <h2>{this.props.title}</h2>\n          <h4>Steam Players: {this.props.players}</h4>\n          <h4>Twitch Viewers: {this.props.viewers}</h4>\n          <h4>Twitch Channels: {this.props.channels}</h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport { withRouter, Switch, Route } from \"react-router-dom\";\nimport './App.css';\nimport StartpageContainer from '../Startpage/StartpageContainer';\nimport Topbar from '../../components/Topbar/topbar';\nimport Sidebar from '../../components/Sidebar/Sidebar';\n\n\nclass App extends Component {\n  state = {\n    title: \"\",\n    players: \"\",\n    viewers: \"\",\n    channels: \"\",\n  };\n\n  globalStateHandler = (data) => {\n    this.setState({\n      title: data.steamName,\n      players: data.steamPlayerCount,\n      viewers: data.twitchViewers,\n      channels: data.twitchChannels,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"main-container\">\n        <header className=\"app-header\">\n          <Topbar />\n        </header>\n        <div className=\"visualization-container\">\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={() => (\n                <StartpageContainer globalStateHandler={this.globalStateHandler}/>\n              )}\n            />\n          </Switch>\n          <Sidebar\n            title={this.state.title}\n            players={this.state.players}\n            viewers={this.state.viewers}\n            channels={this.state.channels}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport './index.css';\nimport App from './containers/App/App';\n//import App from \"./containers/App\";\nimport * as serviceWorker from './serviceWorker';\n\nconst app = (\n    <Router  basename={\"/Stwitch\"}>\n      <App />\n    </Router>\n  );\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}